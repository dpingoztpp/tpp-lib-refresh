{"version":3,"file":"tpp-lib-refresh.mjs","sources":["../../../projects/tpp-lib-refresh/src/lib/tpp-lib-refresh.service.ts","../../../projects/tpp-lib-refresh/src/lib/tpp-lib-refresh.component.ts","../../../projects/tpp-lib-refresh/src/lib/tpp-lib-refresh.module.ts","../../../projects/tpp-lib-refresh/src/public-api.ts","../../../projects/tpp-lib-refresh/src/tpp-lib-refresh.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse,\r\n  HttpClient,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\r\n@Injectable()\r\nexport class TppLibRefreshService implements HttpInterceptor {\r\n  // port_credenciales\r\n  private refreshTokenInProgress = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\r\n    null\r\n  );\r\n  constructor(@Inject('config') private config: any, private _http: HttpClient) {\r\n    // this.port_credenciales=config.url//\"https://7wm9bk5qsj.execute-api.us-east-1.amazonaws.com/dev\"\r\n  }\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = localStorage.getItem('idToken');\r\n    if (!token) {\r\n      return next.handle(req);\r\n    }\r\n    // const headers =\r\n    return next.handle(this.addToken(req)).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        if (err.status === 401) {\r\n          return this.handle401(req, next);\r\n          // return this.refresh(req,next)\r\n        }\r\n        return throwError(() => err);\r\n      })\r\n    );\r\n  }\r\n  handle401(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (this.refreshTokenInProgress) {\r\n      return this.refreshTokenSubject.pipe(\r\n        filter((result) => result !== null),\r\n        take(1),\r\n        switchMap(() => next.handle(this.addToken(req)))\r\n      );\r\n    } else {\r\n      this.refreshTokenInProgress = true;\r\n      this.refreshTokenSubject.next(null);\r\n\r\n      return this.refresh().pipe(\r\n        switchMap((token) => {\r\n          this.setDataToken(token);\r\n          this.refreshTokenInProgress = false;\r\n          return next.handle(this.addToken(req));\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  addToken(req: HttpRequest<any>) {\r\n    const token = localStorage.getItem('idToken');\r\n    return req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${token}`),\r\n    });\r\n  }\r\n  refresh() {\r\n    let refreshToken = { refreshToken: localStorage.getItem('refreshToken') };\r\n\r\n    return this._http.post(this.config.url + '/oauth/refresh', refreshToken);\r\n  }\r\n\r\n  setDataToken(data: any) {\r\n    let resp = data;\r\n    let usuario_inicio: any = resp;\r\n    let tokenData: any = usuario_inicio.tokenData;\r\n    // token\r\n    localStorage.setItem('accessToken', tokenData.accessToken);\r\n    localStorage.setItem('expiresIn', tokenData.expiresIn);\r\n    localStorage.setItem('tokenType', tokenData.tokenType);\r\n    // localStorage.setItem(\"refreshToken\",tokenData.refreshToken);\r\n    localStorage.setItem('idToken', tokenData.idToken);\r\n    // decode idToken\r\n    localStorage.setItem('finishToken', this.expireToken());\r\n    localStorage.setItem('initToken', this.initToken());\r\n  }\r\n  expireToken() {\r\n    const token = localStorage.getItem('idToken');\r\n    let base64Url = token.split('.')[1];\r\n    let decodedValue = JSON.parse(window.atob(base64Url));\r\n    return decodedValue.exp;\r\n  }\r\n  initToken() {\r\n    const token = localStorage.getItem('idToken');\r\n    let base64Url = token.split('.')[1];\r\n    let decodedValue = JSON.parse(window.atob(base64Url));\r\n    return decodedValue.iat;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-tpp-lib-refresh',\r\n  template: ` <p>tpp-lib-refresh works!</p> `,\r\n  styles: [],\r\n  standalone: true\r\n})\r\nexport class TppLibRefreshComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { TppLibRefreshComponent } from './tpp-lib-refresh.component';\r\nimport { TppLibRefreshService } from './tpp-lib-refresh.service';\r\n\r\n@NgModule({\r\n  imports: [TppLibRefreshComponent],\r\n  exports: [TppLibRefreshComponent]\r\n})\r\nexport class TppLibRefreshModule {\r\n  public static forRoot(config: any): ModuleWithProviders<TppLibRefreshModule> {\r\n    return {\r\n      ngModule: TppLibRefreshModule,\r\n      providers: [\r\n        TppLibRefreshService,\r\n        { provide: 'config', useValue: config },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of tpp-lib-refresh\r\n */\r\n\r\nexport * from './lib/tpp-lib-refresh.service';\r\nexport * from './lib/tpp-lib-refresh.component';\r\nexport * from './lib/tpp-lib-refresh.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}